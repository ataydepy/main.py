# importar as bibliotecas
import streamlit as st
import pandas as pd
import yfinance as yf
 # criar as funções de carregamento de dados
    

@st.cache_data
def carregar_dados(empresas):
    texto_tickers = " ".join(empresas)
    dados_acao = yf.Tickers(texto_tickers)
    cotacoes_acoes = dados_acao.history(period='1d', start='2014-01-01', end='2024-01-01')
    cotacoes_acoes = cotacoes_acoes['Close']
    return cotacoes_acoes

@st.cache_data
def carregar_tickers_acoes():
    base_tickers = pd.read_csv(".streamlit/IBOV.csv", sep=";")
    tickers = list(base_tickers["Código"])
    tickers = [item + ".SA" for item in tickers]
    return tickers

acoes = carregar_tickers_acoes()
dados = carregar_dados(acoes)


#criar a interface do streamlit

#prepara as visualizações = filtros
st.sidebar.header('Filtros')

lista_acoes = st.sidebar.multiselect("Escolha as ações para visualizar", dados.columns)
if lista_acoes:
    dados = dados[lista_acoes]
    if len(lista_acoes)==1:
        acao_unica = lista_acoes[0]
        dados = dados.rename(columns={acao_unica:"Close"})


# filtro de datas
data_inicial = dados.index.min().to_pydatetime()
data_final = dados.index.max().to_pydatetime()
intervalo_data = st.sidebar.slider('Selecione o período',   
                min_value=data_inicial, 
                max_value=data_final, 
                value=(data_inicial, data_final))
print(intervalo_data[1])
dados = dados.loc[intervalo_data[0]: intervalo_data[1]]

#criar gráfico
st.line_chart(dados)



texto_performance_ativos = ""

if len(lista_acoes) == 0:
    lista_acoes = list(dados.columns)

elif len(lista_acoes) == 1:
    dados = dados.rename(columns={"Close":acao_unica})

for acoes in lista_acoes:
    # :cor[texto]
    performance_ativo = dados[acoes].iloc[-1] / dados[acoes].iloc[0] - 1
    performance_ativo = float(performance_ativo)
    if performance_ativo > 0:
            texto_performance_ativos = texto_performance_ativos + f'  \n{acoes} :green[{performance_ativo:.1%}]'
    elif performance_ativo < 0:
             texto_performance_ativos = texto_performance_ativos + f'  \n{acoes} :red[{performance_ativo:.1%}]'
    else:
             texto_performance_ativos = texto_performance_ativos + f'  \n{acoes}: {performance_ativo:.1%}'

    
st.write(f"""
### Perfomance dos Ativos
Essa foi a performance de cada ativo no período selecionado:
{texto_performance_ativos}

""") #markdown
